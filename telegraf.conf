[agent]
  interval = "30s"
  round_interval = true
  flush_interval = "30s"
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = true

[[inputs.http]]
  name_override = "orb_scores"
  urls = ["http://host.docker.internal:8000/api/v2/datasets/scores_1m.json?id=12345"]
  method = "GET"
  data_format = "json"
  interval = "30s"
  timeout = "10s"

  json_time_key = "timestamp"
  json_time_format = "unix_ms"

  # Treat all these as tags (dimensions)
  tag_keys = [
    "orb_id",
    "orb_name",
    "dataset",
    "orb_version",
    "network_type",
    "country_code",
    "city",
    "isp_name",
    "public_ip",
    "location_source"
  ]

[[inputs.http]]
  name_override = "orb_responsiveness"
  urls = ["http://host.docker.internal:8000/api/v2/datasets/responsiveness_15s.json?id=12345"]
  method = "GET"
  data_format = "json"
  interval = "30s"
  timeout = "10s"

  json_time_key = "timestamp"
  json_time_format = "unix_ms"

  # Treat all these as tags (dimensions)
  tag_keys = [
    "orb_id",
    "orb_name",
    "dataset",
    "orb_version",
    "network_type",
    "country_code",
    "city",
    "isp_name",
    "public_ip",
    "location_source"
  ]

[[inputs.http]]
  name_override = "orb_speed"
  urls = ["http://host.docker.internal:8000/api/v2/datasets/speed_results.json?id=12345"]
  method = "GET"
  data_format = "json"
  interval = "30s"
  timeout = "10s"

  json_time_key = "timestamp"
  json_time_format = "unix_ms"

  # Treat all these as tags (dimensions)
  tag_keys = [
    "orb_id",
    "orb_name",
    "dataset",
    "orb_version",
    "network_type",
    "country_code",
    "city",
    "isp_name",
    "public_ip",
    "location_source"
  ]

[[inputs.http]]
  name_override = "orb_web_responsiveness"
  urls = ["http://host.docker.internal:8000/api/v2/datasets/web_responsiveness_results.json?id=12345"]
  method = "GET"
  data_format = "json"
  interval = "30s"
  timeout = "10s"

  json_time_key = "timestamp"
  json_time_format = "unix_ms"

  # Treat all these as tags (dimensions)
  tag_keys = [
    "orb_id",
    "orb_name",
    "dataset",
    "orb_version",
    "network_type",
    "country_code",
    "city",
    "isp_name",
    "public_ip",
    "location_source"
  ]

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "orb-secret-token"
  organization = "orb"
  bucket = "orb_metrics"
  timeout = "10s"
